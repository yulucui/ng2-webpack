//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var Exception_ttypes = require('./Exception_types')
var ESmodel_ttypes = require('./ESmodel_types')


var ttypes = require('./ESService_types');
//HELPER FUNCTIONS AND STRUCTURES

InternalSearchData_queryStorePreDay_args = function(args) {
  this.startTime = null;
  this.endTime = null;
  if (args) {
    if (args.startTime !== undefined && args.startTime !== null) {
      this.startTime = args.startTime;
    }
    if (args.endTime !== undefined && args.endTime !== null) {
      this.endTime = args.endTime;
    }
  }
};
InternalSearchData_queryStorePreDay_args.prototype = {};
InternalSearchData_queryStorePreDay_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.startTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.endTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryStorePreDay_args.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryStorePreDay_args');
  if (this.startTime !== null && this.startTime !== undefined) {
    output.writeFieldBegin('startTime', Thrift.Type.I64, 1);
    output.writeI64(this.startTime);
    output.writeFieldEnd();
  }
  if (this.endTime !== null && this.endTime !== undefined) {
    output.writeFieldBegin('endTime', Thrift.Type.I64, 2);
    output.writeI64(this.endTime);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchData_queryStorePreDay_result = function(args) {
  this.success = null;
  this.RException = null;
  if (args instanceof Exception_ttypes.RException) {
    this.RException = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.RException !== undefined && args.RException !== null) {
      this.RException = args.RException;
    }
  }
};
InternalSearchData_queryStorePreDay_result.prototype = {};
InternalSearchData_queryStorePreDay_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.RException = new Exception_ttypes.RException();
        this.RException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryStorePreDay_result.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryStorePreDay_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.RException !== null && this.RException !== undefined) {
    output.writeFieldBegin('RException', Thrift.Type.STRUCT, 1);
    this.RException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchData_queryStorePreDayByUserid_args = function(args) {
  this.startTime = null;
  this.endTime = null;
  this.userid = null;
  if (args) {
    if (args.startTime !== undefined && args.startTime !== null) {
      this.startTime = args.startTime;
    }
    if (args.endTime !== undefined && args.endTime !== null) {
      this.endTime = args.endTime;
    }
    if (args.userid !== undefined && args.userid !== null) {
      this.userid = args.userid;
    }
  }
};
InternalSearchData_queryStorePreDayByUserid_args.prototype = {};
InternalSearchData_queryStorePreDayByUserid_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.startTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.endTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.userid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryStorePreDayByUserid_args.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryStorePreDayByUserid_args');
  if (this.startTime !== null && this.startTime !== undefined) {
    output.writeFieldBegin('startTime', Thrift.Type.I64, 1);
    output.writeI64(this.startTime);
    output.writeFieldEnd();
  }
  if (this.endTime !== null && this.endTime !== undefined) {
    output.writeFieldBegin('endTime', Thrift.Type.I64, 2);
    output.writeI64(this.endTime);
    output.writeFieldEnd();
  }
  if (this.userid !== null && this.userid !== undefined) {
    output.writeFieldBegin('userid', Thrift.Type.STRING, 3);
    output.writeString(this.userid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchData_queryStorePreDayByUserid_result = function(args) {
  this.success = null;
  this.RException = null;
  if (args instanceof Exception_ttypes.RException) {
    this.RException = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.RException !== undefined && args.RException !== null) {
      this.RException = args.RException;
    }
  }
};
InternalSearchData_queryStorePreDayByUserid_result.prototype = {};
InternalSearchData_queryStorePreDayByUserid_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.RException = new Exception_ttypes.RException();
        this.RException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryStorePreDayByUserid_result.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryStorePreDayByUserid_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.RException !== null && this.RException !== undefined) {
    output.writeFieldBegin('RException', Thrift.Type.STRUCT, 1);
    this.RException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDay_args = function(args) {
  this.startTime = null;
  this.endTime = null;
  if (args) {
    if (args.startTime !== undefined && args.startTime !== null) {
      this.startTime = args.startTime;
    }
    if (args.endTime !== undefined && args.endTime !== null) {
      this.endTime = args.endTime;
    }
  }
};
InternalSearchData_queryEventCountPreDay_args.prototype = {};
InternalSearchData_queryEventCountPreDay_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.startTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.endTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDay_args.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryEventCountPreDay_args');
  if (this.startTime !== null && this.startTime !== undefined) {
    output.writeFieldBegin('startTime', Thrift.Type.I64, 1);
    output.writeI64(this.startTime);
    output.writeFieldEnd();
  }
  if (this.endTime !== null && this.endTime !== undefined) {
    output.writeFieldBegin('endTime', Thrift.Type.I64, 2);
    output.writeI64(this.endTime);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDay_result = function(args) {
  this.success = null;
  this.RException = null;
  if (args instanceof Exception_ttypes.RException) {
    this.RException = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.RException !== undefined && args.RException !== null) {
      this.RException = args.RException;
    }
  }
};
InternalSearchData_queryEventCountPreDay_result.prototype = {};
InternalSearchData_queryEventCountPreDay_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.RException = new Exception_ttypes.RException();
        this.RException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDay_result.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryEventCountPreDay_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.RException !== null && this.RException !== undefined) {
    output.writeFieldBegin('RException', Thrift.Type.STRUCT, 1);
    this.RException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDayByProcessTime_args = function(args) {
  this.startTime = null;
  this.endTime = null;
  if (args) {
    if (args.startTime !== undefined && args.startTime !== null) {
      this.startTime = args.startTime;
    }
    if (args.endTime !== undefined && args.endTime !== null) {
      this.endTime = args.endTime;
    }
  }
};
InternalSearchData_queryEventCountPreDayByProcessTime_args.prototype = {};
InternalSearchData_queryEventCountPreDayByProcessTime_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.startTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.endTime = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDayByProcessTime_args.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryEventCountPreDayByProcessTime_args');
  if (this.startTime !== null && this.startTime !== undefined) {
    output.writeFieldBegin('startTime', Thrift.Type.I64, 1);
    output.writeI64(this.startTime);
    output.writeFieldEnd();
  }
  if (this.endTime !== null && this.endTime !== undefined) {
    output.writeFieldBegin('endTime', Thrift.Type.I64, 2);
    output.writeI64(this.endTime);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDayByProcessTime_result = function(args) {
  this.success = null;
  this.RException = null;
  if (args instanceof Exception_ttypes.RException) {
    this.RException = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.RException !== undefined && args.RException !== null) {
      this.RException = args.RException;
    }
  }
};
InternalSearchData_queryEventCountPreDayByProcessTime_result.prototype = {};
InternalSearchData_queryEventCountPreDayByProcessTime_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I64) {
        this.success = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.RException = new Exception_ttypes.RException();
        this.RException.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

InternalSearchData_queryEventCountPreDayByProcessTime_result.prototype.write = function(output) {
  output.writeStructBegin('InternalSearchData_queryEventCountPreDayByProcessTime_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I64, 0);
    output.writeI64(this.success);
    output.writeFieldEnd();
  }
  if (this.RException !== null && this.RException !== undefined) {
    output.writeFieldBegin('RException', Thrift.Type.STRUCT, 1);
    this.RException.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

InternalSearchDataClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
InternalSearchDataClient.prototype = {};
InternalSearchDataClient.prototype.seqid = function() { return this._seqid; }
InternalSearchDataClient.prototype.new_seqid = function() { return this._seqid += 1; }
InternalSearchDataClient.prototype.queryStorePreDay = function(startTime, endTime, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryStorePreDay(startTime, endTime);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryStorePreDay(startTime, endTime);
  }
};

InternalSearchDataClient.prototype.send_queryStorePreDay = function(startTime, endTime) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryStorePreDay', Thrift.MessageType.CALL, this.seqid());
  var args = new InternalSearchData_queryStorePreDay_args();
  args.startTime = startTime;
  args.endTime = endTime;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InternalSearchDataClient.prototype.recv_queryStorePreDay = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InternalSearchData_queryStorePreDay_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.RException) {
    return callback(result.RException);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryStorePreDay failed: unknown result');
};
InternalSearchDataClient.prototype.queryStorePreDayByUserid = function(startTime, endTime, userid, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryStorePreDayByUserid(startTime, endTime, userid);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryStorePreDayByUserid(startTime, endTime, userid);
  }
};

InternalSearchDataClient.prototype.send_queryStorePreDayByUserid = function(startTime, endTime, userid) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryStorePreDayByUserid', Thrift.MessageType.CALL, this.seqid());
  var args = new InternalSearchData_queryStorePreDayByUserid_args();
  args.startTime = startTime;
  args.endTime = endTime;
  args.userid = userid;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InternalSearchDataClient.prototype.recv_queryStorePreDayByUserid = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InternalSearchData_queryStorePreDayByUserid_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.RException) {
    return callback(result.RException);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryStorePreDayByUserid failed: unknown result');
};
InternalSearchDataClient.prototype.queryEventCountPreDay = function(startTime, endTime, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryEventCountPreDay(startTime, endTime);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryEventCountPreDay(startTime, endTime);
  }
};

InternalSearchDataClient.prototype.send_queryEventCountPreDay = function(startTime, endTime) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryEventCountPreDay', Thrift.MessageType.CALL, this.seqid());
  var args = new InternalSearchData_queryEventCountPreDay_args();
  args.startTime = startTime;
  args.endTime = endTime;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InternalSearchDataClient.prototype.recv_queryEventCountPreDay = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InternalSearchData_queryEventCountPreDay_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.RException) {
    return callback(result.RException);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryEventCountPreDay failed: unknown result');
};
InternalSearchDataClient.prototype.queryEventCountPreDayByProcessTime = function(startTime, endTime, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_queryEventCountPreDayByProcessTime(startTime, endTime);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_queryEventCountPreDayByProcessTime(startTime, endTime);
  }
};

InternalSearchDataClient.prototype.send_queryEventCountPreDayByProcessTime = function(startTime, endTime) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('queryEventCountPreDayByProcessTime', Thrift.MessageType.CALL, this.seqid());
  var args = new InternalSearchData_queryEventCountPreDayByProcessTime_args();
  args.startTime = startTime;
  args.endTime = endTime;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

InternalSearchDataClient.prototype.recv_queryEventCountPreDayByProcessTime = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new InternalSearchData_queryEventCountPreDayByProcessTime_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.RException) {
    return callback(result.RException);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('queryEventCountPreDayByProcessTime failed: unknown result');
};
InternalSearchDataProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
InternalSearchDataProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

InternalSearchDataProcessor.prototype.process_queryStorePreDay = function(seqid, input, output) {
  var args = new InternalSearchData_queryStorePreDay_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryStorePreDay.length === 2) {
    Q.fcall(this._handler.queryStorePreDay, args.startTime, args.endTime)
      .then(function(result) {
        var result = new InternalSearchData_queryStorePreDay_result({success: result});
        output.writeMessageBegin("queryStorePreDay", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof Exception_ttypes.RException) {
          var result = new InternalSearchData_queryStorePreDay_result(err);
          output.writeMessageBegin("queryStorePreDay", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("queryStorePreDay", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryStorePreDay(args.startTime, args.endTime, function (err, result) {
      if (err == null || err instanceof Exception_ttypes.RException) {
        var result = new InternalSearchData_queryStorePreDay_result((err != null ? err : {success: result}));
        output.writeMessageBegin("queryStorePreDay", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("queryStorePreDay", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

InternalSearchDataProcessor.prototype.process_queryStorePreDayByUserid = function(seqid, input, output) {
  var args = new InternalSearchData_queryStorePreDayByUserid_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryStorePreDayByUserid.length === 3) {
    Q.fcall(this._handler.queryStorePreDayByUserid, args.startTime, args.endTime, args.userid)
      .then(function(result) {
        var result = new InternalSearchData_queryStorePreDayByUserid_result({success: result});
        output.writeMessageBegin("queryStorePreDayByUserid", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof Exception_ttypes.RException) {
          var result = new InternalSearchData_queryStorePreDayByUserid_result(err);
          output.writeMessageBegin("queryStorePreDayByUserid", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("queryStorePreDayByUserid", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryStorePreDayByUserid(args.startTime, args.endTime, args.userid, function (err, result) {
      if (err == null || err instanceof Exception_ttypes.RException) {
        var result = new InternalSearchData_queryStorePreDayByUserid_result((err != null ? err : {success: result}));
        output.writeMessageBegin("queryStorePreDayByUserid", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("queryStorePreDayByUserid", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

InternalSearchDataProcessor.prototype.process_queryEventCountPreDay = function(seqid, input, output) {
  var args = new InternalSearchData_queryEventCountPreDay_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryEventCountPreDay.length === 2) {
    Q.fcall(this._handler.queryEventCountPreDay, args.startTime, args.endTime)
      .then(function(result) {
        var result = new InternalSearchData_queryEventCountPreDay_result({success: result});
        output.writeMessageBegin("queryEventCountPreDay", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof Exception_ttypes.RException) {
          var result = new InternalSearchData_queryEventCountPreDay_result(err);
          output.writeMessageBegin("queryEventCountPreDay", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("queryEventCountPreDay", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryEventCountPreDay(args.startTime, args.endTime, function (err, result) {
      if (err == null || err instanceof Exception_ttypes.RException) {
        var result = new InternalSearchData_queryEventCountPreDay_result((err != null ? err : {success: result}));
        output.writeMessageBegin("queryEventCountPreDay", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("queryEventCountPreDay", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

InternalSearchDataProcessor.prototype.process_queryEventCountPreDayByProcessTime = function(seqid, input, output) {
  var args = new InternalSearchData_queryEventCountPreDayByProcessTime_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.queryEventCountPreDayByProcessTime.length === 2) {
    Q.fcall(this._handler.queryEventCountPreDayByProcessTime, args.startTime, args.endTime)
      .then(function(result) {
        var result = new InternalSearchData_queryEventCountPreDayByProcessTime_result({success: result});
        output.writeMessageBegin("queryEventCountPreDayByProcessTime", Thrift.MessageType.REPLY, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        if (err instanceof Exception_ttypes.RException) {
          var result = new InternalSearchData_queryEventCountPreDayByProcessTime_result(err);
          output.writeMessageBegin("queryEventCountPreDayByProcessTime", Thrift.MessageType.REPLY, seqid);
        } else {
          var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("queryEventCountPreDayByProcessTime", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.queryEventCountPreDayByProcessTime(args.startTime, args.endTime, function (err, result) {
      if (err == null || err instanceof Exception_ttypes.RException) {
        var result = new InternalSearchData_queryEventCountPreDayByProcessTime_result((err != null ? err : {success: result}));
        output.writeMessageBegin("queryEventCountPreDayByProcessTime", Thrift.MessageType.REPLY, seqid);
      } else {
        var result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("queryEventCountPreDayByProcessTime", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
}

